var argv=require("yargs").argv,autoprefixer=require("gulp-autoprefixer"),chalk=require("chalk"),cleanCSS=require("gulp-clean-css"),coffee=require("gulp-coffee"),concat=require("gulp-concat"),del=require("del"),fs=require("fs"),fssync=require("fs-sync"),gulp=require("gulp"),gutil=require("gulp-util"),jshint=require("gulp-jshint"),jsValidate=require("gulp-jsvalidate"),less=require("gulp-less"),nop=require("gulp-nop"),path=require("path"),rename=require("gulp-rename"),sass=require("gulp-sass"),sourcemaps=require("gulp-sourcemaps"),through=require("through2"),ts=require("gulp-typescript"),uglify=require("gulp-uglify"),wait=require("gulp-wait"),config=getConfig(),services={d:"del",del:"autodel",mj:"minjs",minjs:"automin",ts:"typescript",c:"coffee",coffee:"coffeescript",l:"less",less:"less",s:"sass",sass:"sass",mc:"mincss",mincss:"autominCss",a:"all",all:"autodel automin typescript coffeescript less sass autominCss",st:"style",style:"less sass autominCss",jvs:"autodel automin",tps:"typescript",typescript:"autodel automin typescript",cof:"coffeescript",coffeescript:"autodel automin coffeescript"},presetsRegex=/^\b(all|style|js|typescript|coffeescript)\b$/,jsRegexFilePathPattern="^(?:((?:[^\\.]+|..)[\\x2F\\x5C])|)((?:([^\\.^\\x2F^\\x5C]+)(?:((?:[.](?!\\bmin\\b)(?:[^\\.]+))+|))(?:([.]min)([.]js)|([.]js))))$";gulp.task("default",["setParams"]),gulp.task("setVars",function(){for(p_path in setConfig(),config.verbose||logTaskPurpose(this.currentTask.name),config.projects){var e=config.projects[p_path];fssync.exists(e.path+"\\config.mzg.ini")?(console.log(chalk.green(e.project)+" - OK"),e.checked&&setUpProjectWatchingPaths(e.path)):logProjectErrored(e)}config.verbose||console.log("\n["+chalk.gray(dateComputed())+"] CONFIGURATON PROCEEDED\n")}),gulp.task("setParams",function(){var e=this.seq.slice(-1)[0];if(/^default$/.test(e)){var s=tasksToRunOnArgvs();gulp.start(s.length>0?["setVars"].concat(s):[])}else if(/^serve$/.test(e)){s=tasksToRunOnArgvs();gulp.start(s.length>0?["setVars"].concat(s):[])}else if(/^rewrite$/.test(e)){var t=configurationOfRewriteOnArvs(),o=!/^ugly$/.test(t.uglyness),n=!/^multiple$/.test(t.times);logTaskName((o?"imBeauty":"imUgly")+(n?"AtOnce":"imBeauty")),mergingOnChanges(o,n),(o?logTaskEndBeauy:logTaskEndUgly)(n)}}),gulp.task("jshint",function(){return gulp.src(config.pathesToJs).pipe(jshint()).pipe(jshint.reporter("jshint-stylish"))}),gulp.task("helpMe",function(){logHelp()}),gulp.task("scanProjects",function(){logTaskPurpose(this.currentTask.name),setConfig(),config.projects.forEach(function(e){fssync.exists(e.path+"\\config.mzg.ini")||(console.log("file :"+logFilePath(e.path+"\\config.mzg.ini")+" does not exist ... creation very soon"),gulp.src("custom/config_model.ini").pipe(rename("config.mzg.ini")).pipe(gulp.dest(e.path)))})}),gulp.task("serviceMapping",function(){logTaskPurpose(this.currentTask.name),config.verbose=!0,gulp.start(["setVars"])}),gulp.task("serve",["setParams"]),gulp.task("automin",function(){logTaskPurpose(this.currentTask.name);var e=watchList(config.pathesToJs);gulp.watch(e,function(e){var s=new RegExp(jsRegexFilePathPattern,"g").exec(e.path),t=function(){!/.*.min.js$/.test(e.path)&&s&&gulp.src(e.path).pipe(uglify()).pipe(rename({suffix:".min"})).pipe(gulp.dest(function(e){var s=getDestOfMatching(e.path,config.pathesToJs);return gutil.log("Compressed file version updated/created here :\n"+breath()+"> '"+chalk.cyan(s)+"'"),s}))};s[5]+s[6]===".min.js"&&"added"===e.type?logProcessCompleteOnFile(s[2],"created",t):"deleted"!==e.type&&logProcessCompleteOnFile(s[2],"compressed",t)},jshint)}),gulp.task("autodel",function(e){logTaskPurpose(this.currentTask.name);var s=watchList(config.pathesToJs);gulp.watch(s,function(e){var s=new RegExp(jsRegexFilePathPattern,"g").exec(e.path);if("deleted"===e.type&&s){logProcessCompleteOnFile(s[2].replace(/.js$/g,".min.js"),"deleted",function(){var t=getDestOfMatching(e.path,config.pathesToJs),o=(t+"/"+s[2]).replace(/.min.js$/g,".js").replace(/.js$/g,".min.js");fs.stat(o,function(e,s){e||del(o,{force:!0}),gutil.log("source folder here :\n"+breath()+"> '"+chalk.cyan(t)+"'")})})}},jshint)}),gulp.task("mergeAllMinified",function(){gulp.watch(config.pathesToJs,function(){gulp.src(config.pathesToJs+"/scirpt/*.min.js").pipe(concat("js_stack.min.js")).pipe(uglify()).pipe(gulp.dest("../uglified"))})}),gulp.task("typescript",function(){logTaskPurpose(this.currentTask.name);var e=watchList(config.pathesToTs);gulp.watch(e,function(e){gulp.src(e.path).pipe(ts({noImplicitAny:!0,outFile:e.path+".js"})).pipe(gulp.dest(function(e){var s=getDestOfMatching(e.path,config.pathesToTs);return gutil.log("Compressed file version updated/created here :\n"+breath()+"> '"+chalk.cyan(s)+"'"),s}))})});coffee=require("gulp-coffee");function getConfig(){return config||{verbose:!1,pathesToJs:[],pathesToTs:[],pathesToCoffee:[],pathesToStyle:[],pathesToStyleLess:[],pathesToWars:[],pathesToSass:[],projects:[]}}function readJsonConfig(e){var s,t,o=fs.readFileSync(e,"utf8"),n=new classReading;n.initialize(o,0);var i=0,a=!0,r="",c=(s=/^(.*)(\.json)$/.exec(e))[1]+".temp"+s[2];fssync.write(c,"","utf8"),n.readLines(function(){t=n.getLine(),(a=s=/^(.*)\/\/.*$/g.exec(t))?r=s[1]:(a=s=/^(.*)\/\*$/g.exec(t))?(r=s[1],++i):(a=s=/^.*\*\/(.*)$/g.exec(t))?(r=s[1],--i):(a=0==i)&&(r=t),a&&(/^[\s]*$/g.test(r)||fs.appendFileSync(c,r+"\r\n","utf8"))});var l=fs.readFileSync(c,"utf8");return fssync.remove(c),JSON.parse(l)}function setConfig(){config.projects=readJsonConfig("custom/config.json").projects}function processConfigTargetProjects(e,s,t){var o,n=new classReading;n.initialize(s.getData(),s.getIter()),n.readLines(function(){var i,a,r=n.getLine();(o=/^.*\["(.*)","(.*)"\].*$/g.exec(r))&&("minify_js"==t?(i={where:config.pathesToJs,purpose:"Compress .js files into .min.js files"},a="/**/*.js"):"ts_to_js"==t?(i={where:config.pathesToTs,purpose:"Compile .ts files into .js File"},a="/**/*.coffee"):"coffee_to_js"==t?(i={where:config.pathesToCoffee,purpose:"Compile .coffee files into .js File"},a="/**/*.coffee"):"minify_css"==t?(i={where:config.pathesToStyle,purpose:"Compress .css files"},a="/**/*.css"):"less"==t?(i={where:config.pathesToStyleLess,purpose:"Compile .less files into .css files"},a="/**/*.less"):"sass"==t?(i={where:config.pathesToSass,purpose:"Compile .scss files into .css files"},a="/**/*.scss"):"war"==t&&(i={where:config.pathesToWars,purpose:"Rename .WAR files"},a="/**/*.war"),pushNewEntryFor({project:e,pathes:o,subpathToExtention:a},i));/^]$/g.test(n.getLine())&&(n.stop(),s.setIter(n.getIter()))})}function setUpProjectWatchingPaths(e){var s,t,o=fs.readFileSync(e+"/config.mzg.ini","utf8"),n=new classReading;n.initialize(o,0);n.readLines(function(){(s=/^(.*)=.*$/g.exec(n.getLine()))&&(t=s[1]),/^(minify_js|ts_to_js|coffee_to_js|minify_css|less|sass)$/.test(t)&&/^\[$/g.test(n.getLine())&&processConfigTargetProjects(e,n,t)})}function pushNewEntryFor(e,s){var t=e.project,o=e.pathes,n=e.subpathToExtention,i=s.purpose;s.where.push({source:t+"\\"+o[1]+n,dest:t+"\\"+o[2]}),logServiceActivatedPushed(i,t,o,n)}function getDestOfMatching(e,s){for(p_path in e=e.replace(/[\\]/g,"/"),s){var t=s[p_path],o=t.source.replace(/[\\]/g,"/"),n=(t.dest.replace(/[\\]/g,"/"),new RegExp("^([^\\\\/*]+).([^\\*]+)([\\/]?[\\/*]+[\\/]?)(.*)$","g").exec(o)[2]);if(new RegExp("^.*(?:"+n+").*$","g").exec(e))return t.dest}return null}function watchList(e){var s=[];for(p_path in e){var t=e[p_path].source;s.push(t)}return s}function tasksToRunOnArgvs(){var e=[],s=[],t=0,o="?",n=process.argv.slice(3,process.argv.length);for(serv in n){try{var i=/^([\-][\-]?)([^\-]+)$/.exec(n[serv]);checkWellForming(i,o=i[2]),o=convertAliasToFullNameOption(i,o),i&&(matchOption=o)&&pushMatchingOption(e=checkPresetsOverdose(e,t),matchOption)}catch(t){if(s.push(t+" Error with option: "),/^GRAVE ERROR.*$/.test(t)){e=[];break}}t++}return logErrorsOnTaskArgvs(s),e}function checkWellForming(e,s){if(e[1].length>2)throw errors=[],"GRAVE ERROR: argument malformed"}function convertAliasToFullNameOption(e,s){return 1==e[1].length&&(s=services[s]),s}function checkPresetsOverdose(e,s){if(presetsRegex.test(matchOption)&&(e=services[matchOption].split(" "),s>0))throw"GRAVE ERROR: Presets should be alone : "+matchOption;return e}function pushMatchingOption(e,s){if(!presetsRegex.test(s)){if(!services[s])throw"GRAVE ERROR: unknown option or preset or alias : -"+s+" or --"+s;e.push(services[s])}}function breath(){return"           "}function logFilePath(e){return"'"+chalk.cyan(e)+"'"}function logHelp(){var e,s,t=fs.readFileSync("help.md","utf8"),o=new classReading;o.initialize(t,0);var n=0;console.log("\n\n"),o.readLines(function(){s=o.getLine().replace(/\r?\n|\r/g,""),(e=/^([\s]*[#]+.*)$/.exec(s))?console.log(chalk.cyan(e[1])):(e=/^([\s]*)([$](?:[\s][^\s]+)+)([\s]{2,}.*|.*)$/.exec(s))?console.log(chalk.grey(e[1])+e[2]+chalk.green(e[3])):(e=/^([\s]*[>].*)$/.exec(s))?console.log(chalk.green(e[1])):(e=/^([\s]*)([\-]+[^\s,]+)([^\-.]*)((?:[\s][\-]+[^\s]+)+)([^\-.]*)((?:[.][^.\s]+)+|)([^\-.]*)((?:[.][^.\s]+)+|)(.*)$/.exec(s))?console.log(chalk.grey(e[1])+e[2]+chalk.grey(e[3])+e[4]+chalk.grey(e[5])+chalk.magenta(e[6])+chalk.grey(e[7])+chalk.magenta(e[8])+chalk.grey(e[9])):(e=/^([^\-]*)((?:[\-]+[^\s]+[\s]?)+)([\s]?.*)$/.exec(s))?console.log(chalk.grey(e[1])+e[2]+chalk.grey(e[3])):s.length>0?console.log(chalk.grey(s)):++n%3==2&&console.log(s),s.length>0&&(n=0)})}function logErrorsOnTaskArgvs(e){e.length>0&&(console.log(chalk.red(e.join("\n"))),console.log("WARNING \n\nYou may have made mistakes in shoosing wrong options"),console.log("call the folowing command to have more info of what options are valid"),console.log("gulp --help"))}function logProjectErrored(e){console.log(chalk.red(e.project)+" - SOMETING IS WRONG"),console.log(breath()+"this project seems to have no configuration .INI file defined"),console.log(breath()+logFilePath(e.path+"\\config.mzg.ini")+chalk.red(" : MISSING")),console.log("\n"+breath()+"SOLUTION:"),console.log(breath()+"run the command to setup projects local configuraitons:"),console.log(breath()+"> "+chalk.grey("$ gulp scanProjects"))}function logProcessCompleteOnFile(e,s,t){try{var o=new Date;t();var n=ms2Time(new Date-o);console.log(),gutil.log("'"+chalk.cyan(e)+"' "+s+" after"+chalk.magenta(n))}catch(e){console.log(chalk.red(e))}}function ms2Time(e){var s,t,o;return[(o=Math.floor((t=Math.floor((s=Math.floor((e=Math.floor(e%1e3))/1e3%60))%60))%24))?o+"h ":"",t?t+"min ":"",s?s+"sec ":"",e,"ms"].join("")}function dateComputed(){var e=new Date;return[["Mon","Tues","Wednes","Thirth","Fri","Satur","Sun"][e.getDay()-1],"day,",[e.getMonth()+1,e.getDate(),e.getFullYear()].join("-")].join("")}function timeComputed(){var e=new Date;return[e.getHours(),e.getMinutes(),e.getSeconds()].join(":")}function logServiceActivatedPushed(e,s,t,o){var n;config.verbose&&((n=/^([^.]+)([.][^\s]*)([^.]+)([.][^\s]*)([^.]+)$/.exec(e))?console.log("pushing entry for [Purpose] "+chalk.grey(n[1])+chalk.magenta(n[2])+chalk.grey(n[3])+chalk.magenta(n[4])+chalk.grey(n[5])):(n=/^([^.]+)([.][^\s]*)([^.]+)$/.exec(e))&&console.log("pushing entry for [Purpose] "+chalk.grey(n[1])+chalk.magenta(n[2])+chalk.grey(n[3])),console.log("Watch : '"+chalk.cyan(s+"\\"+t[1]+o)+"'"),console.log("Dest. : '"+chalk.cyan(s+"\\"+t[2])+"'\n"))}function logTaskPurpose(e){switch(logTaskName(e),e){case"setVars":console.log("  Sets configuration variables"),console.log("  See the .INI file of project mapping to set Gloups ready to serve your projects here :"),console.log("  > "+logFilePath("custom/config.mzg.ini")+":\n");break;case"automin":console.log("  Will uglify .js files matching the folowing path(s):\n"),logWatchList(config.pathesToJs);break;case"autodel":console.log("  Delete "+logFilePath(".min.js orphan files")+" when "+logFilePath(".js files model")+" are deleted\n");break;case"typescript":console.log("  Will compile .ts files matching the folowing path(s):\n"),logWatchList(config.pathesToTs);break;case"coffeescript":console.log("  Will compile .coffee files matching the folowing path(s):\n"),logWatchList(config.pathesToCoffee);break;case"autominCss":console.log("  Will compress .css files matching the folowing path(s):\n"),logWatchList(config.pathesToStyle);break;case"less":console.log("  Will compile .less files matching the folowing path(s):\n"),logWatchList(config.pathesToStyleLess);break;case"sass":console.log("  Will compile .sass files matching the folowing path(s):\n"),logWatchList(config.pathesToSass);break;case"scanProjects":console.log("  Creates .INI configuration files in your project root folder need to make Gloups able to serve\n");break;default:console.log("  Task unknown: "+e+"\n")}}function logWatchList(e){watchList(e).forEach(function(e){console.log("    '"+chalk.cyan(e)+"'")}),console.log()}function logTaskName(e){console.log("............................................................."),console.log("[Task] "+chalk.red(e)+":")}function logTaskEndUgly(e){console.log("      > which is uglyfied "+chalk.red("for performances")),e?console.log("  once: "+chalk.red("not watching specific files")+"\n"):console.log()}function logTaskEndBeauy(e){console.log("      > which is beautifull "+chalk.red("for debugging")+"\n"),e?console.log("  once: "+chalk.red("not watching specific files")+"\n"):console.log()}function classReading(){this.line,this.data,this.iter,this.stopped=!1,this.initialize=function(e,s){this.data=e,this.iter=s,this.line=[]},this.readLines=function(e){for(var s;!this.isStopped()&&(s=this.getNextChar());)/^[\n\r]$/g.test(s)||this.isEndReached()?(this.toLine(),e(this.getLine()),this.resetLine()):this.feed(s)},this.stop=function(){this.stopped=!0},this.isStopped=function(){return this.stopped},this.setIter=function(e){this.iter=e},this.setData=function(e){this.data=e},this.toLine=function(){this.line=this.line.join(""),this.line=this.line.replace(/^[\n\r]$/g,"")},this.resetLine=function(){this.line=[]},this.getIter=function(){return this.iter},this.getData=function(){return this.data},this.getLine=function(){return this.line},this.getNextChar=function(){return this.data[this.iter++]},this.isEndReached=function(){return!this.data[this.iter]},this.feed=function(e){this.line.push(e)}}gulp.task("coffeescript",function(){logTaskPurpose(this.currentTask.name);var e=watchList(config.pathesToCoffee);gulp.watch(e,function(e){gulp.src(e.path).pipe(coffee({bare:!0})).pipe(gulp.dest(function(e){var s=getDestOfMatching(e.path,config.pathesToCoffee);return gutil.log("Compiled file version updated/created here :\n"+breath()+"> '"+chalk.cyan(s)+"'"),s}))})}),gulp.task("autominCss",function(){logTaskPurpose(this.currentTask.name);var e=watchList(config.pathesToStyle);gulp.watch(e,function(e){if(!/^(.*.min.css|.*.less)$/.test(e.path)&&/^.*.css$/.test(e.path)){logProcessCompleteOnFile(e.path,"compiled",function(){var s=getDestOfMatching(e.path,config.pathesToStyle);gulp.src(e.path).pipe(sourcemaps.init()).pipe(autoprefixer({browsers:["last 2 versions"],cascade:!1})).pipe(cleanCSS({compatibility:"ie8"})).pipe(rename({suffix:".min"})).pipe(sourcemaps.write("./")).pipe(gulp.dest(function(e){return gutil.log("Compressed file version updated/created here :\n"+breath()+"> '"+chalk.cyan(s)+"'"),s}))})}})}),gulp.task("autoformatCss",function(){gulp.watch(config.pathesToStyleLess,function(e){/^(.*.min.css)$/.test(e.path)||(console.log("try"),gulp.src(e.path).pipe(cssbeautify({format:"beautify"})).pipe(gulp.dest(function(e){return e.base})),console.log("done"))})}),gulp.task("less",function(){logTaskPurpose(this.currentTask.name);var e=watchList(config.pathesToStyleLess);gulp.watch(e,function(e){if(/.*.less$/.test(e.path)){logProcessCompleteOnFile(e.path,"compiled",function(){gulp.src(e.path).pipe(sourcemaps.init()).pipe(autoprefixer({browsers:["last 2 versions"],cascade:!1})).pipe(less({paths:[path.join(__dirname,"less","includes")]})).pipe(sourcemaps.write("./")).pipe(gulp.dest(function(e){var s=getDestOfMatching(e.path,config.pathesToStyleLess);return gutil.log("Processed file version updated/created here :\n"+breath()+"> '"+chalk.cyan(s)+"'"),s}))})}})}),gulp.task("sass",function(){logTaskPurpose(this.currentTask.name);var e=watchList(config.pathesToSass);gulp.watch(e,function(e){if(/.*.scss$/.test(e.path)){logProcessCompleteOnFile(e.path,"compiled",function(){gulp.src(e.path).pipe(sourcemaps.init()).pipe(autoprefixer({browsers:["last 2 versions"],cascade:!1})).pipe(sass().on("error",sass.logError)).pipe(sourcemaps.write("./")).pipe(gulp.dest(function(e){var s=getDestOfMatching(e.path,config.pathesToSass);return gutil.log("Processed file version updated/created here :\n"+breath()+"> '"+chalk.cyan(s)+"'"),s}))})}})}),gulp.task("removeWarVersion",function(){gulp.watch(config.pathesToWars,function(e){if(/^(.*.war)$/.test(e.path))try{s=e,t="",gulp.src(s.path).pipe(wait(1500)).pipe(rename(function(e){return t=/^(.*)(?:-[0-9]*.[0-9]*.*)$/g.exec(s.path),console.log(t[1]),t[1]+".war"})).pipe(gulp.dest(function(e){return e.base})),console.log(t),t,logProcessCompleteOnFile("","renamed",function(){})}catch(e){}var s,t})}),gulp.task("rewrite",["setParams","applyTemp","applyDist"]),gulp.Gulp.prototype.__runTask=gulp.Gulp.prototype._runTask,gulp.Gulp.prototype._runTask=function(e){this.currentTask=e,this.__runTask(e)};