var argv=require("yargs").argv,chalk=require("chalk"),cleanCSS=require("gulp-clean-css"),concat=require("gulp-concat"),copy=require("gulp-copy"),del=require("del"),fs=require("fs"),fssync=require("fs-sync"),glob=require("glob"),gulp=require("gulp"),gutil=require("gulp-util"),jshint=require("gulp-jshint"),jsValidate=require("gulp-jsvalidate"),less=require("gulp-less"),nop=require("gulp-nop"),path=require("path"),rename=require("gulp-rename"),runSequence=require("run-sequence"),sass=require("gulp-sass"),ts=require("gulp-typescript"),uglify=require("gulp-uglify"),wait=require("gulp-wait"),mzgFiles=["supports/mzg_vars.js","mzg_gulpfile.js","tasks/mzg_starter_tasks.js","tasks/mzg_js_oriented_tasks.js","tasks/mzg_css_oriented_tasks.js","tasks/mzg_other_oriented_tasks.js","supports/mzg_core_rewriting.js","supports/mzg_user_output.js","supports/mzg_runtask.js","supports/mzg_utils.js","supports/mzg_logging.js","supports/mzg_classes.js"],config=getConfig();gulp.task("default",["setParams"]),gulp.task("setParams",function(){var e=this.seq.slice(-1)[0];if(/^default$/.test(e)){var t=tasksToRunOnArgvs();gulp.start(t.length>0?["setVars"].concat(t):[])}else if(/^rewrite$/.test(e)){var s=configurationOfRewriteOnArvs(),n=!/^ugly$/.test(s.uglyness),o=!/^multiple$/.test(s.times);logTaskName((n?"imBeauty":"imUgly")+(o?"AtOnce":"imBeauty")),mergingOnChanges(n,o),(n?logTaskEndBeauy:logTaskEndUgly)(o)}}),gulp.task("setVars",function(){for(p_path in setConfig(),config.verbose||logTaskPurpose(this.currentTask.name),config.projects){var e=config.projects[p_path];fssync.exists(e.path+"\\config.mzg.ini")?(console.log(chalk.green(e.project)+" - OK"),"*"==e.checked&&setUpProjectWatchingPaths(e.path)):logProjectErrored(e)}config.verbose||console.log("\n["+chalk.gray(dateComputed())+"] CONFIGURATON PROCEEDED\n")}),gulp.task("scanProjects",function(){logTaskPurpose(this.currentTask.name),setConfig(),config.projects.forEach(function(e){fssync.exists(e.path+"\\config.mzg.ini")||(console.log("file :"+logFilePath(e.path+"\\config.mzg.ini")+" does not exist ... creation very soon"),gulp.src("custom/config_model.ini").pipe(rename("config.mzg.ini")).pipe(gulp.dest(e.path)))})}),gulp.task("serviceMapping",function(){logTaskPurpose(this.currentTask.name),config.verbose=!0,gulp.start(["setVars"])});var jsRegexFilePathPattern="^(?:((?:[^\\.]+|..)[\\x2F\\x5C])|)((?:([^\\.^\\x2F^\\x5C]+)(?:((?:[.](?!\\bmin\\b)(?:[^\\.]+))+|))(?:([.]min)([.]js)|([.]js))))$";gulp.task("automin",function(){logTaskPurpose(this.currentTask.name);var e=watchList(config.pathesToJs);gulp.watch(e,function(e){var t=new RegExp(jsRegexFilePathPattern,"g").exec(e.path),s=function(){!/.*.min.js$/.test(e.path)&&t&&gulp.src(e.path).pipe(uglify()).pipe(rename({suffix:".min"})).pipe(gulp.dest(function(e){var t=getDestOfMatching(e.path,config.pathesToJs);return gutil.log("Compressed file version updated/created here :\n"+breath()+"> '"+chalk.cyan(t)+"'"),t}))};t[5]+t[6]===".min.js"&&"added"===e.type?logProcessCompleteOnFile(t[2],"created",s):"deleted"!==e.type&&logProcessCompleteOnFile(t[2],"compressed",s)},jshint)}),gulp.task("autodel",function(e){logTaskPurpose(this.currentTask.name);var t=watchList(config.pathesToJs);gulp.watch(t,function(e){var t=new RegExp(jsRegexFilePathPattern,"g").exec(e.path);if("deleted"===e.type&&t){logProcessCompleteOnFile(t[2].replace(/.js$/g,".min.js"),"deleted",function(){var s=getDestOfMatching(e.path,config.pathesToJs),n=(s+"/"+t[2]).replace(/.min.js$/g,".js").replace(/.js$/g,".min.js");fs.stat(n,function(e,t){e||del(n,{force:!0}),gutil.log("source folder here :\n"+breath()+"> '"+chalk.cyan(s)+"'")})})}},jshint)}),gulp.task("mergeAllMinified",function(){gulp.watch(config.pathesToJs,function(){gulp.src(config.pathesToJs+"/scirpt/*.min.js").pipe(concat("js_stack.min.js")).pipe(uglify()).pipe(gulp.dest("../uglified"))})}),gulp.task("typescript",function(){logTaskPurpose(this.currentTask.name);var e=watchList(config.pathesToTs);gulp.watch(e,function(e){gulp.src(e.path).pipe(ts({noImplicitAny:!0,outFile:e.path+".js"})).pipe(gulp.dest(function(e){var t=getDestOfMatching(e.path,config.pathesToTs);return gutil.log("Compressed file version updated/created here :\n"+breath()+"> '"+chalk.cyan(t)+"'"),t}))})}),gulp.task("autominCss",function(){logTaskPurpose(this.currentTask.name);var e=watchList(config.pathesToStyle);gulp.watch(e,function(e){if(!/^(.*.min.css|.*.less)$/.test(e.path)&&/^.*.css$/.test(e.path)){logProcessCompleteOnFile(e.path,"compiled",function(){gulp.src(e.path).pipe(cleanCSS({compatibility:"ie8"})).pipe(rename({suffix:".min"})).pipe(gulp.dest(function(e){var t=getDestOfMatching(e.path,config.pathesToStyle);return gutil.log("Compressed file version updated/created here :\n"+breath()+"> '"+chalk.cyan(t)+"'"),t}))})}})}),gulp.task("autoformatCss",function(){gulp.watch(config.pathesToStyleLess,function(e){/^(.*.min.css)$/.test(e.path)||(console.log("try"),gulp.src(e.path).pipe(cssbeautify({format:"beautify"})).pipe(gulp.dest(function(e){return e.base})),console.log("done"))})}),gulp.task("less",function(){logTaskPurpose(this.currentTask.name);var e=watchList(config.pathesToStyleLess);gulp.watch(e,function(e){if(/.*.less$/.test(e.path)){logProcessCompleteOnFile(e.path,"compiled",function(){gulp.src(e.path).pipe(less({paths:[path.join(__dirname,"less","includes")]})).pipe(gulp.dest(function(e){var t=getDestOfMatching(e.path,config.pathesToStyleLess);return gutil.log("Processed file version updated/created here :\n"+breath()+"> '"+chalk.cyan(t)+"'"),t}))})}})}),gulp.task("sass",function(){logTaskPurpose(this.currentTask.name);var e=watchList(config.pathesToSass);gulp.watch(e,function(e){if(/.*.scss$/.test(e.path)){logProcessCompleteOnFile(e.path,"compiled",function(){gulp.src(e.path).pipe(sass().on("error",sass.logError)).pipe(gulp.dest(function(e){var t=getDestOfMatching(e.path,config.pathesToSass);return gutil.log("Processed file version updated/created here :\n"+breath()+"> '"+chalk.cyan(t)+"'"),t}))})}})}),gulp.task("removeWarVersion",function(){gulp.watch(config.pathesToWars,function(e){if(/^(.*.war)$/.test(e.path))try{t=e,s="",gulp.src(t.path).pipe(wait(1500)).pipe(rename(function(e){return s=/^(.*)(?:-[0-9]*.[0-9]*.*)$/g.exec(t.path),console.log(s[1]),s[1]+".war"})).pipe(gulp.dest(function(e){return e.base})),console.log(s),s,logProcessCompleteOnFile("","renamed",function(){})}catch(e){}var t,s})}),gulp.task("rewrite",["setParams","applyTemp"]);var bySetup=!0,stayBeautiful=!0,modifiedMZGEvent=null,merging=function(e){e&&(modifiedMZGEvent=e);new Date;bySetup||(console.log(),gutil.log("CHANGING '"+chalk.cyan("gulpfile.js")+"'..."),console.log("FIRED BY '"+chalk.cyan(e.path)+"'...\n")),bySetup=!1,gulp.start("writeTemp")},mergingOnChanges=function(e,t){console.log("  fuses:\n    '"+chalk.cyan("mzg_gulpfile.js")+"'\t: tasks\n    '"+chalk.cyan("mzg_utils.js")+"'\t: utilities\n    '"+chalk.cyan("mzg_classes.js")+"'\t: classes\n\n  into:\n    '"+chalk.cyan("gulpfile.js")+"'\t: the file used by gulp"),t?(stayBeautiful=e,merging()):gulp.watch(mzgFiles,function(e){merging(e)})};function getGulpfolderFromFileBase(e){return/^(.*[\/\\]gulp)[\/\\].*/.exec(e.base)[1]}function getConfig(){return config||{verbose:!1,pathesToJs:[],pathesToTs:[],pathesToStyle:[],pathesToStyleLess:[],pathesToWars:[],pathesToSass:[],projects:[]}}gulp.task("writeTemp",function(){var e=new Date;gulp.src(mzgFiles).pipe(jsValidate())&&gulp.src(mzgFiles).pipe(concat("gulpfile_temp.js")).pipe((stayBeautiful?nop:uglify)()).pipe(gulp.dest(function(t){var s=ms2Time(new Date-e);return gutil.log(chalk.cyan("gulpfile_temp.js")+"' writen after "+chalk.magenta(s)),getGulpfolderFromFileBase(t)}))}),gulp.task("applyTemp",function(){gulp.watch("gulpfile_temp.js",function(t){e(t)});var e=function(e){if(gulp.src("gulpfile_temp.js").pipe(jsValidate())){gutil.log(chalk.cyan("gulpfile.js")+"' is "+chalk.green("validate"));var t=new Date;gulp.src("gulpfile_temp.js").pipe(rename("gulpfile.js")).pipe(gulp.dest(function(e){var s=ms2Time(new Date-t);return gutil.log(chalk.cyan("gulpfile.js")+"' replaced after "+chalk.magenta(s)),getGulpfolderFromFileBase(e)}))}}}),gulp.task("jshint",function(){return gulp.src(config.pathesToJs).pipe(jshint()).pipe(jshint.reporter("jshint-stylish"))}),gulp.task("helpMe",function(){logHelp()}),gulp.Gulp.prototype.__runTask=gulp.Gulp.prototype._runTask,gulp.Gulp.prototype._runTask=function(e){this.currentTask=e,this.__runTask(e)};config=getConfig();function setConfig(){var e,t,s=fs.readFileSync("custom/config.ini","utf8"),n=new classReading;n.initialize(s,0);n.readLines(function(){(e=/^(.*)=.*$/g.exec(n.getLine()))&&(t=e[1]),/^Projects_paths$/.test(t)&&/^\[$/g.test(n.getLine())&&processConfig(n,t)})}function configurationOfRewriteOnArvs(){var e={uglyness:"beauty",times:"once"},t=process.argv.slice(2,process.argv.length);for(serv in t)try{var s=/^--(.*)$/.exec(t[serv]);s&&(matchOption=s[1])&&(console.log(matchOption),"ugly"==matchOption?e.uglyness=matchOption:"multiple"==matchOption?e.times=matchOption:console.log(chalk.red("unknown option --"+matchOption)))}catch(e){errors.push(e+" Error with option: ")}return e}function tasksToRunOnArgvs(){var e={wars:"removeWarVersion",del:"autodel",minjs:"automin",ts:"typescript",less:"less",sass:"sass",mincss:"autominCss",all:"autodel automin typescript less sass autominCss",style:"less sass autominCss",js:"autodel automin",typescript:"autodel automin typescript"},t=[],s=[],n=0,o=process.argv.slice(2,process.argv.length);for(serv in o){try{var i=/^--(.*)$/.exec(o[serv]);if(i&&(matchOption=i[1]))if(/^all|style|js|typescript$/.test(matchOption)){if(t=e[matchOption].split(" "),n>0)throw s=[],"GRAVE ERROR: Too much presets"}else e[matchOption]?t.push(e[matchOption]):console.log(chalk.red("unknown option --"+matchOption))}catch(e){if(s.push(e+" Error with option: "),/^GRAVE ERROR.*$/.test(e)){t=[];break}}n++}return logErrorsOnTaskArgvs(s),t}function setUpProjectWatchingPaths(e){var t,s,n=fs.readFileSync(e+"/config.mzg.ini","utf8"),o=new classReading;o.initialize(n,0);o.readLines(function(){(t=/^(.*)=.*$/g.exec(o.getLine()))&&(s=t[1]),/^(minify_js|ts_to_js|minify_css|less|sass)$/.test(s)&&/^\[$/g.test(o.getLine())&&processConfigTargetProjects(e,o,s)})}function processConfig(e,t){var s,n=new classReading;n.initialize(e.getData(),e.getIter());n.readLines(function(){var o=n.getLine();(s=/^.*\[(.*),"(.*)",(.*)\],?$/g.exec(o))&&"Projects_paths"==t&&config.projects.push({project:s[1],path:s[2],checked:s[3]}),/^]$/g.test(n.getLine())&&(n.stop(),e.setIter(n.getIter()))})}function processConfigTargetProjects(e,t,s){var n,o=new classReading;o.initialize(t.getData(),t.getIter());o.readLines(function(){var i,a,l=o.getLine();(n=/^.*\["(.*)","(.*)"\].*$/g.exec(l))&&("minify_js"==s?(i={where:config.pathesToJs,purpose:"Compress .js files into .min.js files"},a="/**/*.js"):"ts_to_js"==s?(i={where:config.pathesToTs,purpose:"Compile .ts files into .js File"},a="/**/*.ts"):"minify_css"==s?(i={where:config.pathesToStyle,purpose:"Compress .css files"},a="/**/*.css"):"less"==s?(i={where:config.pathesToStyleLess,purpose:"Compile .less files into .css files"},a="/**/*.less"):"sass"==s?(i={where:config.pathesToSass,purpose:"Compile .scss files into .css files"},a="/**/*.scss"):"war"==s&&(i={where:config.pathesToWars,purpose:"Rename .WAR files"},a="/**/*.war"),pushNewEntryFor({project:e,pathes:n,subpathToExtention:a},i));/^]$/g.test(o.getLine())&&(o.stop(),t.setIter(o.getIter()))})}function pushNewEntryFor(e,t){var s,n=e.project,o=e.pathes,i=e.subpathToExtention,a=t.purpose;(t.where.push({source:n+"\\"+o[1]+i,dest:n+"\\"+o[2]}),config.verbose)&&((s=/^([^.]+)([.][^\s]*)([^.]+)([.][^\s]*)([^.]+)$/.exec(a))?console.log("pushing entry for [Purpose] "+chalk.grey(s[1])+chalk.magenta(s[2])+chalk.grey(s[3])+chalk.magenta(s[4])+chalk.grey(s[5])):(s=/^([^.]+)([.][^\s]*)([^.]+)$/.exec(a))&&console.log("pushing entry for [Purpose] "+chalk.grey(s[1])+chalk.magenta(s[2])+chalk.grey(s[3])),console.log("Watch : '"+chalk.cyan(n+"\\"+o[1]+i)+"'"),console.log("Dest. : '"+chalk.cyan(n+"\\"+o[2])+"'\n"))}function getDestOfMatching(e,t){for(p_path in e=e.replace(/[\\]/g,"/"),t){var s=t[p_path],n=s.source.replace(/[\\]/g,"/"),o=(s.dest.replace(/[\\]/g,"/"),new RegExp("^([^\\\\/*]+).([^\\*]+)([\\/]?[\\/*]+[\\/]?)(.*)$","g").exec(n)[2]);if(new RegExp("^.*(?:"+o+").*$","g").exec(e))return s.dest}return null}function watchList(e){var t=[];for(p_path in e){var s=e[p_path].source;t.push(s)}return t}function breath(){return"           "}function logFilePath(e){return"'"+chalk.cyan(e)+"'"}function logHelp(){console.log(fs.readFileSync("site/help.md","utf8"))}function logErrorsOnTaskArgvs(e){e.length>0&&(console.log(chalk.red(e.join("\n"))),console.log("WARNING \n\nYou may have made mistakes in shoosing wrong options"),console.log("call the folowing command to have more info of what options are valid"),console.log("gulp --help"))}function logProjectErrored(e){console.log(chalk.red(e.project)+" - SOMETING IS WRONG"),console.log(breath()+"this project seems to have no configuration .INI file defined"),console.log(breath()+logFilePath(e.path+"\\config.mzg.ini")+chalk.red(" : MISSING")),console.log("\n"+breath()+"SOLUTION:"),console.log(breath()+"run the command to setup projects local configuraitons:"),console.log(breath()+"> "+chalk.grey("$ gulp scanProjects"))}function logProcessCompleteOnFile(e,t,s){try{var n=new Date;s();var o=ms2Time(new Date-n);console.log(),gutil.log("'"+chalk.cyan(e)+"' "+t+" after"+chalk.magenta(o))}catch(e){console.log(chalk.red(e))}}function ms2Time(e){var t,s,n;return[(n=Math.floor((s=Math.floor((t=Math.floor((e=Math.floor(e%1e3))/1e3%60))%60))%24))?n+"h ":"",s?s+"min ":"",t?t+"sec ":"",e,"ms"].join("")}function dateComputed(){var e=new Date;return[["Mon","Tues","Wednes","Thirth","Fri","Satur","Sun"][e.getDay()-1],"day,",[e.getMonth()+1,e.getDate(),e.getFullYear()].join("-")].join("")}function timeComputed(){var e=new Date;return[e.getHours(),e.getMinutes(),e.getSeconds()].join(":")}function logTaskPurpose(e){switch(logTaskName(e),e){case"setVars":console.log("  Sets configuration variables"),console.log("  See the .INI file of project mapping to set MazeGulp ready to serve your projects here :"),console.log("  > "+logFilePath("custom/config.mzg.ini")+":\n");break;case"automin":console.log("  Will uglify .js files matching the folowing path(s):\n"),logWatchList(config.pathesToJs);break;case"autodel":console.log("  Delete "+logFilePath(".min.js orphan files")+" when "+logFilePath(".js files model")+" are deleted\n");break;case"typescript":console.log("  Will compile .ts files matching the folowing path(s):\n"),logWatchList(config.pathesToTs);break;case"autominCss":console.log("  Will compress .css files matching the folowing path(s):\n"),logWatchList(config.pathesToStyle);break;case"less":console.log("  Will compile .less files matching the folowing path(s):\n"),logWatchList(config.pathesToStyleLess);break;case"sass":console.log("  Will compile .sass files matching the folowing path(s):\n"),logWatchList(config.pathesToSass);break;case"scanProjects":console.log("  Creates .INI configuration files in your project root folder need to make MazeGulp able to serve\n");break;default:console.log("  Task unknown: "+e+"\n")}}function logWatchList(e){watchList(e).forEach(function(e){console.log("    '"+chalk.cyan(e)+"'")}),console.log()}function logTaskName(e){console.log("............................................................."),console.log("[Task] "+chalk.red(e)+":")}function logTaskEndUgly(e){console.log("      > which is uglyfied "+chalk.red("for performances")),e?console.log("  once: "+chalk.red("not watching specific files")+"\n"):console.log()}function logTaskEndBeauy(e){console.log("      > which is beautifull "+chalk.red("for debugging")+"\n"),e?console.log("  once: "+chalk.red("not watching specific files")+"\n"):console.log()}function classReading(){this.line,this.data,this.iter,this.stopped=!1,this.initialize=function(e,t){this.data=e,this.iter=t,this.line=[]},this.readLines=function(e){for(var t;!this.isStopped()&&(t=this.getNextChar());)/^[\r\n]$/g.test(t)||this.isEndReached()?(this.toLine(),e(this.getLine()),this.resetLine()):this.feed(t)},this.stop=function(){this.stopped=!0},this.isStopped=function(){return this.stopped},this.setIter=function(e){this.iter=e},this.setData=function(e){this.data=e},this.toLine=function(){this.line=this.line.join("").replace("\r","").replace("\n","")},this.resetLine=function(){this.line=[]},this.getIter=function(){return this.iter},this.getData=function(){return this.data},this.getLine=function(){return this.line},this.getNextChar=function(){return this.data[this.iter++]},this.isEndReached=function(){return!this.data[this.iter]},this.feed=function(e){this.line.push(e)}}